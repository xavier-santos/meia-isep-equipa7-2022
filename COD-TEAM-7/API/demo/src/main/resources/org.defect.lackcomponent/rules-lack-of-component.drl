/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.defect.lackcomponent;

import org.engcia.model.Evidence;
import org.engcia.model.Hypothesis;
import org.engcia.model.Conclusion;
import org.engcia.model.Fact;

import function org.engcia.view.QuestionFactory.answer;

query "Conclusions"
	$conclusion : Conclusion()
end

rule "r1"
	when
		eval(answer(Evidence.AI_VISION, "no" ))
	then
		Conclusion c = Conclusion.create(Conclusion.TURN_ON_AI_SYSTEM);
		insert(c);
end

rule "r2"
	when
		eval(answer(Evidence.AI_VISION, "yes" ))
	then
		Hypothesis h = Hypothesis.create("AI vision system", "on");
		insert(h);
end

rule "r3"
	when
		Hypothesis( description == "AI vision system", value == "on")
        eval(answer(Evidence.MOLD_PARAMS, "yes" ))
	then
		Conclusion c = Conclusion.create(Conclusion.CHECK_AI_SYSTEM_PLC_COMMUNICATION);
		insert(c);
end

rule "r4"
	when
		Hypothesis( description == "AI vision system", value == "on")
		eval(answer(Evidence.MOLD_PARAMS, "no"))
	then
		Conclusion c = Conclusion.create(Conclusion.REVIEW_PARAMS);
		insert(c);
end

rule "unknown"
	when
		not Conclusion()
	then
		Conclusion c = Conclusion.create(Conclusion.UNKNOWN);
		insert(c);
end

query "evidence"(String ev, String v)
	e : Evidence( evidence == ev, value == v )
end

